<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAD///8A////AP///wDI0S4cyc0uisnNLtPJzS71yc0u/8nNLv/JzS7/yc0u/8nNLv/JzS7/yc0u/8nN
        Lv/JzS//ycw2/8nKPP/JyUP/ychK/8nHUP/Jxlf/ycVd/8nEZP/Kwmv/ysFx9crAeNPLwH+Jxr2EG///
        /wD///8A////AP///wD///8AyM0tYcnNLvbJzS7/yc0u/8nNLv/JzS7/yc0u/8nNLv/JzS7/yc0u/8nN
        Lv/JzS7/ycwy/8nLOP/Jyj//yclG/8nITP/Jx1P/ycVZ/8nEYP/Jw2f/ysJt/8rBdP/KwHr/yr6B/8q9
        iP/KvI72yruWYf///wD///8A////AMnMLl/JzS7/yc0u/8nNLv/JzS7/yc0u/8nNLv/JzS7/yc0u/8nN
        Lv/JzS7/yc0u/8nMNP/Jyzv/ycpB/8nISP/Jx0//ycZV/8nFXP/JxGL/ycNp/8rCcP/KwHb/yr99/8q+
        g//KvYr/yryR/8q7l//KuZ7/ybijZP///wDI0S4cyc0u9snNLv/JzS7/yc0u/8nNLv/JzS7/yc0u/8nN
        Lv/JzS7/yc0u/8nNMP/Jyzf/yco9/8nJRP/JyEv/ycdR/8nGWP/JxV7/ycNl/8rCbP/KwXL/ysB5/8q/
        f//Kvob/yryN/8q7k//Kupr/yrmg/8q4pv/Kuab2yLakHMrNLovJzS7/yc0u/7i6Lv+opy7/qKcu/6in
        Lv+opy7/qKcu/6inLv+opzD/qKYz/6imN/+opTv/qKU+/6ikQv+oo0X/qKNJ/6iiTP+poVD/qaFT/6mg
        V/+pn1r/qZ9e/6meYf+pnmX/qZ1o/6mdbP+pnG7/qZxu/7eohv/JuaaKyc0t1cnNLv/EyC7/hIAu/4J9
        Lv+CfS7/gn0u/4J9Lv+CfS7/gn0u/4J9Lv+CfS7/gn0u/4J9Lv+CfS7/gn0u/4J9Lv+CfS7/gn0u/4J9
        Lv+CfS7/gn0u/4J9Lv+CfS7/gn0u/4J9Lv+CfS7/gn0u/4J9Lv+CfS7/gn4v/8CwldnJzS71yc0u/7/C
        Lv+QjS7/kI0u/5CNLv+QjS7/kI0v/5CNMP+QjDH/kIwz/5CMNP+QjDX/kIw3/5CLOP+6s1r/xr1p/8a8
        bv+9tW3/kIo//5CKQP+QikH/kIlD/5CJRP+QiUX/kIlG/5CJRv+QiUb/kIlG/5CJRv+QiUb/vKyN98nN
        Lv/JzS7/yc0u/8nNLv/JzS7/yc0u/8nMNP/Jyzr/ycpB/8nJSP/Jx07/ycZV/8nFW//JxGL/ycNo/8rC
        b//KwHb/yr98/8q+g//KvYn/yryQ/8q7l//Kup3/yrik/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4
        pv/KuKb/yc0u/8nNLv/JzS7/yc0u/8nNMP/JzDb/sLA4/5WSNP+VkTb/lZE4/5WROf+VkTv/lZA9/5WQ
        P/+Vj0D/lY9C/5WPRP+Vj0X/lY5H/5WOSf+Vjkv/lY1N/5WNTv+VjU7/lY1O/5WNTv+VjU7/rqJ4/8q4
        pv/KuKb/yrim/8q4pv/JzS7/yc0u/8nNLv/JzDL/ycs5/8nKP/+opTr/gn0u/4J9Lv+CfS7/gn0u/4J9
        Lv+CfS7/gn0u/4J9Lv+CfS7/gn0u/4J9Lv+CfS7/gn0u/4J9Lv+CfS7/gn0u/4J9Lv+CfS7/gn0u/4J9
        Lv+kmWb/yrim/8q4pv/KuKb/yrim/8nNLv/JzS7/ycw1/8nLO//JykL/ychI/6ikP/+CfS7/l5E7/6Oe
        R/+jnkr/o51N/6OdUf+jnFP/o5xX/6ObWf+jm13/o5pg/6OZY/+jmWb/o5lm/6OZZv+jmWb/o5lm/6OZ
        Zv+Zj1T/gn0u/6SZZv/KuKb/yrim/8q4pv/KuKb/yc0x/8nLN//Jyj7/yclE/8nIS//Jx1L/qKRE/4J9
        Lv+tqFD/ysJs/8rBc//KwHn/yr+A/8q+hv/KvI3/yruU/8q6mv/KuaH/yrim/8q4pv/KuKb/yrim/8q4
        pv/KuKb/yrim/7OlgP+CfS7/pJlm/8q4pv/KuKb/yrim/8q4pv/Jyzr/ycpA/8nJR//Jx07/ycZU/8nF
        W/+oo0n/gn0u/66oVf/KwXX/yr98/5aNYP+Hflv/h31f/4d9ZP+HfGn/h3tt/5yOgP/KuKb/yrim/8q4
        pv/KuKb/yrim/8q4pv/KuKb/s6WA/4J9Lv+kmWb/yrim/8q4pv/KuKb/yrim/8nJQ//JyEn/ycdQ/8nG
        V//JxV3/ycRk/6mhTv+CfS7/rqZb/8q/fv/KvoX/qp91/xYVEP8AAAD/AAAA/wAAAP8AAAD/SkM9/8q4
        pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv+zpYD/gn0u/6SZZv/KuKb/yrim/8q4pv/KuKb/ychM/8nH
        U//JxVn/ycRg/8nDZv/Kwm3/qaFT/4J9Lv+upmH/yr2H/8q8jv/Ku5X/q56D/wcHBv8AAAD/AAAA/wAA
        AP9ZUUn/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/7OlgP+CfS7/pJlm/8q4pv/KuKb/yrim/8q4
        pv/JxlX/ycVc/8nEYv/Jw2n/ysJv/8rAdv+poFj/gn0u/66lZv/KvJD/yruX/5WIdP8gHhr/AAAA/wAA
        AP8AAAD/AAAA/2deVf/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/s6WA/4J9Lv+kmWb/yrim/8q4
        pv/KuKb/yrim/8nFXv/Jw2X/ysJr/8rBcv/KwHn/yr9//6mfXP+CfS7/rqNs/6+hhf89ODD/AAAA/wAA
        AP8AAAD/AAAA/wEBAf8AAAD/dWtg/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv+zpYD/gn0u/6SZ
        Zv/KuKb/yrim/8q4pv/KuKb/ycNn/8rCbv/KwXT/raZk/6ehZP+noWb/n5pc/5WRT/+Lh1L/eHVG/3d0
        Rf93dEX/aGY6/wYGAv8cGRf/lYh6/woJCP+EeG3/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/7Ol
        gP+CfS7/pJlm/8q4pv/KuKb/yrim/8q4pv/KwXD/ysB3/8G3df/AvZP/5uTU/7i1iP+4tYj/uLWI/7i1
        iP+4tYj/uLWI/9fWvf/c2sX/MS8W/5mLfv/KuKb/loh7/5iLff/KuKb/yrim/8q4pv/KuKb/yrim/8q4
        pv/KuKb/s6WA/4J9Lv+kmWb/yrim/8q4pv/KuKb/yrim/8rAev/Kv4D/v7R6/8TAmf/k49L/u7mO/7u5
        jv+7uY7/u7mO/7u5jv+7uY7/1dW7/+HfzP9za0v/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4
        pv/KuKb/yrim/8q4pv+zpYD/gn0u/6SZZv/KuKb/yrim/8q4pv/KuKb/yr6D/8q9if+/s4L/xMCb/+Ph
        z/+2tIX/trSF/7a0hf+2tIX/trSF/7a0hf/U07j/4d/M/7Gjfv/KuKb/yrim/8q4pv/KuKb/yrim/8q4
        pv/KuKb/yrim/8q4pv/KuKb/yrim/7OlgP+CfS7/pJlm/8q4pv/KuKb/yrim/8q4pv/KvYz/yruS/7+x
        if/EwJv/393J/6WhaP+loWj/paFo/6WhaP+loWj/paFo/83Kq//h38z/s6aA/8q4pv/KuKb/yrim/8q4
        pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/s6WA/4J9Lv+kmWb/yrim/8q4pv/KuKb/yrim/8q7
        lf/Kupv/v7CR/8TAnP/Y177/k49L/5OPS/+Tj0v/k49L/5OPS/+Tj0v/w8Ca/+HfzP+zpoD/yrim/8q4
        pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv+zpYD/gn0u/6SZZv/KuKb/yrim/8q4
        pv/KuKb/yrme/8q4pf+/sJT/xMCc/9/dyf+momr/pqJq/6aiav+momr/pqJq/6aiav/Ny6v/4d/M/5KL
        Sf+VjU7/lY1O/5WNTv+VjU7/lY1O/5WNTv+VjU7/lY1O/5WNTv+VjU7/lY1O/4+HRP+CfS7/pJlm/8q4
        pv/KuKb/yrim/8q4pv/KuKb/yrim/7+wlP/EwJz/4+LQ/7e1h/+3tYf/t7WH/7e1h/+3tYf/t7WH/9XT
        uf/h38z/hoE1/4J9Lv+CfS7/gn0u/4J9Lv+CfS7/gn0u/4J9Lv+CfS7/gn0u/4J9Lv+CfS7/gn0u/4J9
        Lv+sn3P/yrim/8q4pv/KuKb/yrim/8q4pfXKuKb/v7CU/8TAnP/v7uT/0c+y/8jGo//HxqP/yMak/8rI
        p//GxKD/4+DP/+HfzP+bklj/o5lm/6OZZv+jmWb/o5lm/6OZZv+jmWb/o5lm/6OZZv+jmWb/o5lm/6OZ
        Zv+jmWb/qp1w/8i2ov/KuKb/yrim/8q4pv/KuKX1yrim1cq4pv+/sJT/xMCc///////t7eH/397K/9fW
        vf/Y1r3/1dO5/9zbxf/p6dv/4d/M/7OmgP/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4
        pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4ptTKt6WLyrim/7+wlP/EwJz/6OfY/+/v
        5v/Qz7D/3NrD/+rq3f/////////////////h38z/s6aA/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4
        pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/yreli8azqhvKuab2v7CU/8TA
        nP/U0rf/xcOe/8K/mf+tqnb/zMmp/////////////////+HfzP+zpoD/yrim/8q4pv/KuKb/yrim/8q4
        pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pvfMu6oe////AMq3
        pWDBsZf/wL2W/+jn2P/V07n/1NO4/93bxv/b2sP/////////////////3dvG/7Sogv/KuKb/yrim/8q4
        pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/y7mlZv//
        /wD///8A////AMm3pWOsonT8p6Bt/6egbf+noG3/p6Bt/6egbf+noG3/p6Bt/6egbf+ooW//xrWg/8q4
        pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim98u5
        p2L///8A////AP///wD///8A////AMq5px3Kt6WLyrim1cq4pfXKuKb/yrim/8q4pv/KuKb/yrim/8q4
        pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/KuKb/yrim/8q4pv/Kuab2yrim1cq3
        pYvKuacd////AP///wD///8A4AAAB8AAAAOAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAAAABwAAAA+AAAAc=
</value>
  </data>
</root>